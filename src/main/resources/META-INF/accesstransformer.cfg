public-f net.minecraft.world.level.block.state.BlockBehaviour properties
public net.minecraft.world.level.block.state.BlockBehaviour$Properties hasCollision
public net.minecraft.world.level.block.state.BlockBehaviour$Properties canOcclude

public net.minecraft.world.level.block.state.properties.IntegerProperty min
public net.minecraft.world.level.block.state.properties.IntegerProperty max

public net.minecraft.client.gui.GuiGraphics blitNineSlicedSprite(Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/resources/metadata/gui/GuiSpriteScaling$NineSlice;IIIII)V # blitNineSlicedSprite
public-f net.minecraft.world.level.block.WallBlock shapeByIndex
public-f net.minecraft.world.level.block.WallBlock collisionShapeByIndex
public net.minecraft.world.level.block.WallBlock makeShapes(FFFFFF)Ljava/util/Map; # makeShapes
public-f net.minecraft.world.level.block.CrossCollisionBlock shapeByIndex
public-f net.minecraft.world.level.block.CrossCollisionBlock collisionShapeByIndex
public net.minecraft.world.level.block.CrossCollisionBlock makeShapes(FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape;
public net.minecraft.world.level.block.Blocks always(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z # always
public net.minecraft.world.level.block.Blocks never(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z # never
public net.minecraft.world.level.block.TrapDoorBlock type # type
protected net.minecraft.client.gui.screens.Screen deferredTooltipRendering
public net.minecraft.client.gui.screens.Screen children
public net.minecraft.client.gui.screens.Screen narratables # narratables
public net.minecraft.client.gui.screens.Screen$DeferredTooltipRendering
public net.minecraft.client.gui.screens.Screen$DeferredTooltipRendering <init>(Ljava/util/List;Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;)V
public net.minecraft.world.entity.Display$BlockDisplay getBlockState()Lnet/minecraft/world/level/block/state/BlockState;
public net.minecraft.world.entity.Display$BlockDisplay setBlockState(Lnet/minecraft/world/level/block/state/BlockState;)V
public net.minecraft.server.level.ServerPlayer bedInRange(Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z

public net.minecraft.server.packs.repository.FolderRepositorySource folder
public net.minecraft.server.packs.repository.FolderRepositorySource packType
public net.minecraft.server.packs.repository.FolderRepositorySource validator
public net.minecraft.server.packs.repository.FolderRepositorySource createDiscoveredFilePackInfo(Ljava/nio/file/Path;)Lnet/minecraft/server/packs/PackLocationInfo;

public net.minecraft.data.recipes.ShapelessRecipeBuilder ensureValid(Lnet/minecraft/resources/ResourceLocation;)V
public net.minecraft.data.recipes.ShapelessRecipeBuilder criteria
public net.minecraft.data.recipes.ShapelessRecipeBuilder group
public net.minecraft.data.recipes.ShapelessRecipeBuilder category
public net.minecraft.data.recipes.ShapelessRecipeBuilder result
public net.minecraft.data.recipes.ShapelessRecipeBuilder count
public net.minecraft.data.recipes.ShapelessRecipeBuilder ingredients

public net.minecraft.world.item.crafting.ShapelessRecipe result

public net.minecraft.world.item.crafting.ShapedRecipe pattern
public net.minecraft.world.item.crafting.ShapedRecipe result

public net.minecraft.world.item.crafting.ShapedRecipePattern data

public net.minecraft.world.item.HoeItem TILLABLES
public-f net.minecraft.world.item.AxeItem STRIPPABLES
public-f net.minecraft.world.item.ShovelItem FLATTENABLES
public-f net.minecraft.world.entity.npc.Villager WANTED_ITEMS
public-f net.minecraft.world.entity.npc.Villager FOOD_POINTS
public-f net.minecraft.world.entity.ai.behavior.WorkAtComposter COMPOSTABLE_ITEMS
